{"version":3,"sources":["components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/Cards/Cards.module.css","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableURL","axios","get","console","log","fetchDailyData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","barChart","backgroundColor","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","coronaImage","alt","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ef5986aa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__3fEzq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2ZNoY\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";","import React from \"react\";\r\nimport {Card, CardContent, Typography, Grid} from \"@material-ui/core\";\r\nimport CountUp from \"react-countup\";\r\nimport cx from \"classnames\";\r\n\r\nimport styles from './Cards.module.css';\r\n\r\nconst Cards = ({data: {confirmed, recovered, deaths, lastUpdate}}) => {\r\n    if (!confirmed) {\r\n        return 'Loading ...';\r\n    }\r\n    return (\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify={\"center\"}>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color={\"textSecondary\"} gutterBottom>Infected</Typography>\r\n                        <Typography variant={\"h5\"}>\r\n                            <CountUp start={0} end={confirmed.value} duration={2.5} separator={\",\"} />\r\n                        </Typography>\r\n                        <Typography color={\"textSecondary\"}>{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant={\"body2\"}>Number of active cases for COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color={\"textSecondary\"} gutterBottom>Recovered</Typography>\r\n                        <Typography variant={\"h5\"}>\r\n                            <CountUp start={0} end={recovered.value} duration={2.5} separator={\",\"} />\r\n                        </Typography>\r\n                        <Typography color={\"textSecondary\"}>{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant={\"body2\"}>Number of recoveries from COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color={\"textSecondary\"} gutterBottom>Deaths</Typography>\r\n                        <Typography variant={\"h5\"}>\r\n                            <CountUp start={0} end={deaths.value} duration={2.5} separator={\",\"} />\r\n                        </Typography>\r\n                        <Typography color={\"textSecondary\"}>{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant={\"body2\"}>Number of deaths caused COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n    let changeableURL = url;\r\n\r\n    if (country) {\r\n        changeableURL = `${url}/countries/${country}`;\r\n    }\r\n\r\n    try {\r\n        const {data} = await axios.get(changeableURL);\r\n\r\n        return {\r\n            confirmed: data.confirmed,\r\n            recovered: data.recovered,\r\n            deaths: data.deaths,\r\n            lastUpdate: data.lastUpdate\r\n        };\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const {data} = await axios.get(`${url}/daily`);\r\n\r\n        return data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate\r\n        }));\r\n    } catch (e) {\r\n\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const {data: {countries}} = await axios.get(`${url}/countries`);\r\n        return countries.map((country) => country.name);\r\n    } catch (e) {\r\n\r\n    }\r\n}","import React, {useState, useEffect} from \"react\";\r\nimport {fetchDailyData} from \"../../api\";\r\nimport {Line, Bar} from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({data: {confirmed, recovered, deaths}, country}) => {\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        };\r\n        fetchAPI();\r\n    }, []);\r\n\r\n    const lineChart = (\r\n        dailyData.length\r\n            ? (\r\n                <Line\r\n                    data={{\r\n                        labels: dailyData.map(({date}) => date),\r\n                        datasets: [{\r\n                            data: dailyData.map(({confirmed}) => confirmed),\r\n                            label: 'Infected',\r\n                            borderColor: '#3333ff',\r\n                            fill: true\r\n                        }, {\r\n                            data: dailyData.map(({deaths}) => deaths),\r\n                            label: 'Deaths',\r\n                            borderColor: 'rgba(255, 0, 0, 0.5)',\r\n                            fill: true\r\n                        }],\r\n                    }}\r\n                />\r\n            ) : null\r\n\r\n    );\r\n\r\n    const barChart = (\r\n        confirmed\r\n            ? (\r\n                <Bar\r\n                    data={{\r\n                        labels: ['Infected', 'Recovered', 'Deaths'],\r\n                        datasets: [{\r\n                            label: 'People',\r\n                            backgroundColor: [\r\n                                'rgba(0, 0, 255, 0.5)',\r\n                                'rgba(0, 255, 0, 0.5)',\r\n                                'rgba(255, 0, 0, 0.5)',\r\n                            ],\r\n                            data: [confirmed.value, recovered.value, deaths.value]\r\n                        }]\r\n                    }}\r\n                    options={{\r\n                        legend: {display: false},\r\n                        title: {display: true, text: `Current state in ${country}`}\r\n                    }}\r\n                />\r\n            ) : null\r\n    );\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {country ? barChart : lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import React, {useState, useEffect} from \"react\";\r\nimport {NativeSelect, FormControl} from \"@material-ui/core\";\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nimport {fetchCountries} from \"../../api\";\r\n\r\nconst CountryPicker = ({handleCountryChange}) => {\r\n    const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n\r\n        fetchAPI();\r\n    }, [setFetchedCountries]);\r\n\r\n    return (\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue={\"\"} onChange={(e => handleCountryChange(e.target.value))}>\r\n                <option value={\"\"}>Global</option>\r\n                {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","import React from 'react';\n\nimport Cards from \"./components/Cards/Cards\";\nimport Chart from \"./components/Chart/Chart\";\nimport CountryPicker from \"./components/CountryPicker/CountryPicker\";\nimport styles from \"./App.module.css\";\nimport {fetchData} from \"./api\";\n\nimport coronaImage from './images/image.png';\n\nclass App extends React.Component {\n    state = {\n        data: {},\n        country: ''\n    }\n\n    async componentDidMount() {\n        const fetchedData = await fetchData();\n        this.setState({data: fetchedData})\n    }\n\n    handleCountryChange = async (country) => {\n        const fetchedData = await fetchData(country);\n        this.setState({data: fetchedData, country: country})\n    }\n\n\n    render() {\n        const { data, country } = this.state;\n\n        return (\n            <div className={styles.container}>\n                <img className={styles.image} src={coronaImage} alt={\"COVID-19\"}/>\n                <Cards data={data}/>\n                <CountryPicker handleCountryChange={this.handleCountryChange}/>\n                <Chart data={data} country={country}/>\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__BA2do\",\"card\":\"Cards_card__3gOEa\",\"infected\":\"Cards_infected__3nkaT\",\"recovered\":\"Cards_recovered__1vPBB\",\"deaths\":\"Cards_deaths__33Q4S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2FleM\",\"image\":\"App_image__10E1E\"};"],"sourceRoot":""}